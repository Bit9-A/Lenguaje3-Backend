-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.client_interactions
(
    id bigserial NOT NULL,
    client_id bigint,
    employee_id bigint,
    interaction_date date DEFAULT CURRENT_DATE,
    notes text COLLATE pg_catalog."default",
    CONSTRAINT client_interactions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.client_proposals
(
    id bigserial NOT NULL,
    client_id bigint,
    proposal_description text COLLATE pg_catalog."default",
    proposal_date date DEFAULT CURRENT_DATE,
    budget numeric,
    status text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT client_proposals_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.clients
(
    id bigserial NOT NULL,
    firstname text COLLATE pg_catalog."default" NOT NULL,
    lastname text COLLATE pg_catalog."default" NOT NULL,
    email text COLLATE pg_catalog."default" NOT NULL,
    phone text COLLATE pg_catalog."default",
    address text COLLATE pg_catalog."default",
    birthdate date,
    gender text COLLATE pg_catalog."default",
    national_id text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT clients_pkey PRIMARY KEY (id),
    CONSTRAINT clients_email_key UNIQUE (email),
    CONSTRAINT clients_national_id_key UNIQUE (national_id)
);

CREATE TABLE IF NOT EXISTS public.employee_types
(
    id bigserial NOT NULL,
    type_name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT employee_types_pkey PRIMARY KEY (id),
    CONSTRAINT employee_types_type_name_key UNIQUE (type_name)
);

CREATE TABLE IF NOT EXISTS public.employees
(
    id bigserial NOT NULL,
    firstname text COLLATE pg_catalog."default" NOT NULL,
    lastname text COLLATE pg_catalog."default" NOT NULL,
    email text COLLATE pg_catalog."default" NOT NULL,
    phone text COLLATE pg_catalog."default",
    "position" text COLLATE pg_catalog."default",
    schedule text COLLATE pg_catalog."default",
    employee_type_id bigint,
    birthdate date,
    gender text COLLATE pg_catalog."default",
    national_id text COLLATE pg_catalog."default",
    hire_date date,
    CONSTRAINT employees_pkey PRIMARY KEY (id),
    CONSTRAINT employees_email_key UNIQUE (email),
    CONSTRAINT employees_national_id_key UNIQUE (national_id)
);

CREATE TABLE IF NOT EXISTS public.estimates
(
    id bigserial NOT NULL,
    project_id bigint,
    estimated_cost numeric NOT NULL,
    estimated_duration integer,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    CONSTRAINT estimates_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.material_types
(
    id bigserial NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT material_types_pkey PRIMARY KEY (id),
    CONSTRAINT material_types_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.materials
(
    id bigserial NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    price numeric NOT NULL,
    material_type_id bigint,
    CONSTRAINT materials_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.materials_project
(
    id bigserial NOT NULL,
    material_id bigint,
    quantity integer NOT NULL,
    project_id bigint,
    CONSTRAINT materials_project_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.notifications
(
    id bigserial NOT NULL,
    message text COLLATE pg_catalog."default" NOT NULL,
    sent_at timestamp without time zone DEFAULT now(),
    project_id bigint,
    CONSTRAINT notifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.payment_types
(
    id bigserial NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    CONSTRAINT payment_types_pkey PRIMARY KEY (id),
    CONSTRAINT payment_types_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.payments
(
    id bigserial NOT NULL,
    amount double precision NOT NULL,
    payment_date date NOT NULL,
    project_id bigint,
    payment_type_id bigint,
    description text COLLATE pg_catalog."default",
    service_id bigint,
    material_id bigint,
    CONSTRAINT payments_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.project_employees
(
    project_id bigint NOT NULL,
    employee_id bigint NOT NULL,
    CONSTRAINT project_employees_pkey PRIMARY KEY (project_id, employee_id)
);

CREATE TABLE IF NOT EXISTS public.project_photos
(
    id bigserial NOT NULL,
    project_id bigint,
    photo_url text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    taken_at timestamp without time zone DEFAULT now(),
    CONSTRAINT project_photos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.project_progress
(
    id bigserial NOT NULL,
    project_id bigint,
    progress_description text COLLATE pg_catalog."default",
    progress_date date,
    visible boolean DEFAULT true,
    CONSTRAINT project_progress_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.project_service_employees
(
    project_id bigint NOT NULL,
    service_id bigint NOT NULL,
    employee_id bigint NOT NULL,
    CONSTRAINT project_service_employees_pkey PRIMARY KEY (project_id, service_id, employee_id)
);

CREATE TABLE IF NOT EXISTS public.project_services
(
    project_id bigint NOT NULL,
    service_id bigint NOT NULL,
    is_paid boolean DEFAULT false,
    status text COLLATE pg_catalog."default",
    end_date date,
    CONSTRAINT project_services_pkey PRIMARY KEY (project_id, service_id)
);

CREATE TABLE IF NOT EXISTS public.projects
(
    id bigserial NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    start_date date,
    end_date date,
    status text COLLATE pg_catalog."default",
    proposal_id bigint,
    is_paid boolean DEFAULT false,
    CONSTRAINT projects_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.services
(
    id bigserial NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    price numeric,
    CONSTRAINT services_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_roles
(
    id bigserial NOT NULL,
    role_name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_roles_pkey PRIMARY KEY (id),
    CONSTRAINT user_roles_role_name_key UNIQUE (role_name)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id bigserial NOT NULL,
    email text COLLATE pg_catalog."default" NOT NULL,
    password text COLLATE pg_catalog."default" NOT NULL,
    phone text COLLATE pg_catalog."default",
    preferences text COLLATE pg_catalog."default",
    username text COLLATE pg_catalog."default" NOT NULL,
    role_id bigint,
    status text COLLATE pg_catalog."default" NOT NULL,
    employee_id bigint,
    reset_token text COLLATE pg_catalog."default",
    reset_token_expiration timestamp without time zone,
    login_token text COLLATE pg_catalog."default",
    login_token_expiration timestamp without time zone,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email),
    CONSTRAINT users_username_key UNIQUE (username)
);

ALTER TABLE IF EXISTS public.client_interactions
    ADD CONSTRAINT client_interactions_client_id_fkey FOREIGN KEY (client_id)
    REFERENCES public.clients (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.client_interactions
    ADD CONSTRAINT client_interactions_employee_id_fkey FOREIGN KEY (employee_id)
    REFERENCES public.employees (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.client_proposals
    ADD CONSTRAINT client_proposals_client_id_fkey FOREIGN KEY (client_id)
    REFERENCES public.clients (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employees
    ADD CONSTRAINT employees_employee_type_id_fkey FOREIGN KEY (employee_type_id)
    REFERENCES public.employee_types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_employee_type
    ON public.employees(employee_type_id);


ALTER TABLE IF EXISTS public.estimates
    ADD CONSTRAINT estimates_project_id_fkey FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.materials
    ADD CONSTRAINT materials_material_type_id_fkey FOREIGN KEY (material_type_id)
    REFERENCES public.material_types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_material_type
    ON public.materials(material_type_id);


ALTER TABLE IF EXISTS public.materials_project
    ADD CONSTRAINT materials_project_material_id_fkey FOREIGN KEY (material_id)
    REFERENCES public.materials (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.materials_project
    ADD CONSTRAINT materials_project_project_id_fkey FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notifications
    ADD CONSTRAINT notifications_project_id_fkey FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT payments_material_id_fkey FOREIGN KEY (material_id)
    REFERENCES public.materials (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT payments_payment_type_id_fkey FOREIGN KEY (payment_type_id)
    REFERENCES public.payment_types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT payments_project_id_fkey FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT payments_service_id_fkey FOREIGN KEY (service_id)
    REFERENCES public.services (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.project_employees
    ADD CONSTRAINT project_employees_employee_id_fkey FOREIGN KEY (employee_id)
    REFERENCES public.employees (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.project_employees
    ADD CONSTRAINT project_employees_project_id_fkey FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.project_photos
    ADD CONSTRAINT project_photos_project_id_fkey FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.project_progress
    ADD CONSTRAINT project_progress_project_id_fkey FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.project_service_employees
    ADD CONSTRAINT project_service_employees_employee_id_fkey FOREIGN KEY (employee_id)
    REFERENCES public.employees (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.project_service_employees
    ADD CONSTRAINT project_service_employees_project_id_service_id_fkey FOREIGN KEY (project_id, service_id)
    REFERENCES public.project_services (project_id, service_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.project_services
    ADD CONSTRAINT project_services_project_id_fkey FOREIGN KEY (project_id)
    REFERENCES public.projects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.project_services
    ADD CONSTRAINT project_services_service_id_fkey FOREIGN KEY (service_id)
    REFERENCES public.services (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.projects
    ADD CONSTRAINT projects_proposal_id_fkey FOREIGN KEY (proposal_id)
    REFERENCES public.client_proposals (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_employee_id_fkey FOREIGN KEY (employee_id)
    REFERENCES public.employees (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_users_employee_id
    ON public.users(employee_id);


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_role_id_fkey FOREIGN KEY (role_id)
    REFERENCES public.user_roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;